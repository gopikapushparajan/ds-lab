#include<stdio.h>
#define size 5
int items[size];
int front = -1, rear= -1;
int isFull(){
    if(( front== rear+1) || (front==0 && rear==size-1))
        return 1;
    return 0;
}

int isEmpty(){
    if(front==-1)
        return 1;
    return 0;
}

void enqueue(int elemet){
    if (isFull())
        printf("\n QUEUE IS FULL !!\n");
    else{
        if(front==-1)
            front=0;
          rear=(rear+1)%size;
          items[rear] = element;
          printf("\n Inserted->%d",element);
    }
}

int dequeue(){
    int element;
    if(isEmpty())
    {
       printf("\nQueue is empty!!\n");
       return(-1);
    }
    else{
        element = items[front];
        if( front==rear)
        {
            front = -1;
            rear = -1;
        }
        else
        {
            front = (front+1)%size;
        }

        printf("\nDeleted element -> %d\n", element);
        return(element);
    }
}

void display()
{
    int i;
    if(isEmpty())
        printf("\n Empty Queue\n");
    else
    {
        printf("\n Front = %d",front);
        printf("\n Items = ");
        for(i=front; i!= rear; i=(i+1)%size)
        {
            printf("%d",items[i]);
        }
        printf("%d",items[i]);
        printf("\nRear = %d \n",rear);
    }
}

int main()
{
    int choice;
    while(1)
    {
        printf("1.INSERT\n");
        printf("2.DELETE\n");
        printf("3.DISPLAY\n");
        printf("4.EXIT\n");
        printf("Enter your choice: ");
        scanf("%d",&choice);
        switch(choice)
        {
            case 1:
                printf("\nENTER THE ELEMENT TO BE INSERTED: ");
                scanf("%d",&x);
                enqueue(x); 
                break;
            case 2: dequeue(); break;
            case 3: display(); break;
            case 4: exit(1);
            default: printf("INVALID CHOICE \n");
        }
    }
return 0;
}
